group 'com.github.bhlangonijr'
version '0.3.11'

buildscript {
    ext.kotlin_version = '1.5.10'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.5.10"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.12.+"
    implementation "org.python:jython:2.5.3"
    implementation "org.erlang.otp:jinterface:1.6.1"
    implementation "io.github.microutils:kotlin-logging:1.8.3"
    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation "org.slf4j:slf4j-simple:1.7.30"
    implementation "com.bazaarvoice.jolt:jolt-core:0.1.5"
    implementation "com.bazaarvoice.jolt:json-utils:0.1.5"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.1.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.1.1"
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

test {

    String testType = System.properties['test.type']
    if (testType == 'integration') {
        include '**/*IntegrationTest.*'
        include '**/*IntegrationSpec.*'
    } else if (testType == 'unit') {
        include '**/*Test.*'
        include '**/*Spec.*'
        exclude '**/*IntegrationTest.*'
        exclude '**/*IntegrationSpec.*'
    } else if (testType == 'all') {
        include '**/*Test.*'
        include '**/*Spec.*'
    } else {
        //Default to unit
        include '**/*Test.*'
        include '**/*Spec.*'
        exclude '**/*IntegrationTest.*'
        exclude '**/*IntegrationSpec.*'
    }
    useJUnitPlatform()
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}
task integrationTest(type: Test) {

    description = 'Runs the integration tests :D'
    group = 'Verification'
    include '**/*IntegrationTest.*'
    include '**/*IntegrationSpec.*'
    useJUnitPlatform()
    afterSuite { desc, result ->
        if (desc.className) {
            println "Test suite ${desc.name}: ${result.resultType}"
        }
    }
}